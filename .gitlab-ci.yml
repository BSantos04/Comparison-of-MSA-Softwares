default:
  image: stargazernex/lbproject:v6

variables:
  LINT_OUTPUT: "lint_results.json"
  PREVIOUS_LINT_OUTPUT: "previous_lint_results.json"

stages:
  - lint
  - analyze
  - test
  - workflow

flake8:
  stage: lint
  script:
    - python --version
    - pip install flake8
    - flake8 --config custom-flake8.conf code4pipeline.py || true
    - flake8 . --format=json --output-file=$LINT_OUTPUT || true
  artifacts:
    paths:
      - $LINT_OUTPUT
    when: always
    expire_in: 1 day

analyze:
  stage: analyze
  dependencies:
    - flake8
  script:
    - echo "comparing lint results..."
    - if [ -f $PREVIOUS_LINT_OUTPUT ]; then
        python compare_lint.py $PREVIOUS_LINT_OUTPUT $LINT_OUTPUT;
      else
        echo "No previous results to compare.";
      fi
    - cp $LINT_OUTPUT $PREVIOUS_LINT_OUTPUT
  artifacts:
    paths:
      - $PREVIOUS_LINT_OUTPUT
    when: always
    expire_in: 1 day

run_snakemake:
  stage: workflow
  script:
    - echo "Running Snakemake"
    - snakemake --config dataset=datasets/sample.fasta matrix=scoring_matrices/BLOSUM62  --cores 4 # Run the Snakemake pipeline
    - OUTPUT_DIR="MSA_Info_sample"
    - ls -l $OUTPUT_DIR
  artifacts:
    paths:
      - MSA_Info_sample  # Save results from the output directory as artifacts
    when: always  # Always collect artifacts
    expire_in: 1 week  # Artifacts will be stored for 1 week

validate_results:
  stage: test
  script:
    - echo "Validating results"
    - ls -l MSA_Info_sample
    - test -f "MSA_Info_sample/MSA_Info_sample.log" && echo "MSA_Info_sample.log exists"
    - test -f "MSA_Info_sample/CPU_Usage.png" && echo "CPU_Usage.png exists"
    - test -f "MSA_Info_sample/RAM_Usage.png" && echo "RAM_Usage.png exists"
    - test -f "MSA_Info_sample/Execution_Times.png" && echo "Execution_Times.png exists"
    - test -f "MSA_Info_sample/Overall_Scores.png" && echo "Overall_Scores.png exists"
    - test -f "MSA_Info_sample/SP-Scores.png" && echo "SP-Scores.png exists"
  when: always  # Run this job always

